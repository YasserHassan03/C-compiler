Terminals unused in grammar

    END


Grammar

    0 $accept: program $end

    1 primary_expression: IDENTIFIER
    2                   | CONSTANT
    3                   | STRING_LITERAL
    4                   | L_BRAC expression R_BRAC

    5 postfix_expression: primary_expression
    6                   | postfix_expression L_SQ expression R_SQ
    7                   | postfix_expression L_BRAC R_BRAC
    8                   | postfix_expression L_BRAC argument_expression_list R_BRAC
    9                   | postfix_expression DOT IDENTIFIER
   10                   | postfix_expression PTR_OP IDENTIFIER
   11                   | postfix_expression INC_OP
   12                   | postfix_expression DEC_OP

   13 argument_expression_list: assignment_expression
   14                         | argument_expression_list COMMA assignment_expression

   15 unary_expression: postfix_expression
   16                 | INC_OP unary_expression
   17                 | DEC_OP unary_expression
   18                 | unary_operator cast_expression
   19                 | SIZEOF unary_expression
   20                 | SIZEOF L_BRAC type_name R_BRAC

   21 unary_operator: AND_UNARY
   22               | PTR_TIMES
   23               | ADD_UNARY
   24               | SUB_OP
   25               | TILDE
   26               | EXCLA

   27 cast_expression: unary_expression
   28                | L_BRAC type_name R_BRAC cast_expression

   29 multiplicative_expression: cast_expression
   30                          | multiplicative_expression PTR_TIMES cast_expression
   31                          | multiplicative_expression DIV_OP cast_expression
   32                          | multiplicative_expression MOD_OP cast_expression

   33 additive_expression: multiplicative_expression
   34                    | additive_expression ADD_UNARY multiplicative_expression
   35                    | additive_expression SUB_OP multiplicative_expression

   36 shift_expression: additive_expression
   37                 | shift_expression LEFT_OP additive_expression
   38                 | shift_expression RIGHT_OP additive_expression

   39 relational_expression: shift_expression
   40                      | relational_expression LT_OP shift_expression
   41                      | relational_expression GT_OP shift_expression
   42                      | relational_expression LE_OP shift_expression
   43                      | relational_expression GE_OP shift_expression

   44 equality_expression: relational_expression
   45                    | equality_expression EQ_OP relational_expression
   46                    | equality_expression NE_OP relational_expression

   47 and_expression: equality_expression
   48               | and_expression AND_UNARY equality_expression

   49 exclusive_or_expression: and_expression
   50                        | exclusive_or_expression XOR_OP and_expression

   51 inclusive_or_expression: exclusive_or_expression
   52                        | inclusive_or_expression OR_UNARY exclusive_or_expression

   53 logical_and_expression: inclusive_or_expression
   54                       | logical_and_expression AND_OP inclusive_or_expression

   55 logical_or_expression: logical_and_expression
   56                      | logical_or_expression OR_OP logical_and_expression

   57 conditional_expression: logical_or_expression
   58                       | logical_or_expression TERNARY_OP expression COLON conditional_expression

   59 assignment_expression: conditional_expression
   60                      | unary_expression assignment_operator assignment_expression

   61 assignment_operator: EQ_SIGN
   62                    | MUL_ASSIGN
   63                    | DIV_ASSIGN
   64                    | MOD_ASSIGN
   65                    | ADD_ASSIGN
   66                    | SUB_ASSIGN
   67                    | LEFT_ASSIGN
   68                    | RIGHT_ASSIGN
   69                    | AND_ASSIGN
   70                    | XOR_ASSIGN
   71                    | OR_ASSIGN

   72 expression: assignment_expression
   73           | expression COMMA assignment_expression

   74 constant_expression: conditional_expression

   75 declaration: declaration_specifiers SEMI
   76            | declaration_specifiers init_declarator_list SEMI

   77 declaration_specifiers: storage_class_specifier
   78                       | storage_class_specifier declaration_specifiers
   79                       | type_specifier
   80                       | type_specifier declaration_specifiers
   81                       | type_qualifier
   82                       | type_qualifier declaration_specifiers

   83 init_declarator_list: init_declarator

   84 $@1: %empty

   85 init_declarator_list: init_declarator_list COMMA init_declarator $@1

   86 init_declarator: declarator
   87                | declarator EQ_SIGN initializer

   88 storage_class_specifier: TYPEDEF
   89                        | EXTERN
   90                        | STATIC
   91                        | AUTO
   92                        | REGISTER

   93 type_specifier: VOID
   94               | CHAR
   95               | SHORT
   96               | INT
   97               | LONG
   98               | FLOAT
   99               | DOUBLE
  100               | SIGNED
  101               | UNSIGNED
  102               | struct_or_union_specifier
  103               | enum_specifier
  104               | TYPE_NAME

  105 struct_or_union_specifier: struct_or_union IDENTIFIER L_CURL struct_declaration_list R_CURL
  106                          | struct_or_union L_CURL struct_declaration_list R_CURL
  107                          | struct_or_union IDENTIFIER

  108 struct_or_union: STRUCT
  109                | UNION

  110 struct_declaration_list: struct_declaration
  111                        | struct_declaration_list struct_declaration

  112 struct_declaration: specifier_qualifier_list struct_declarator_list SEMI

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list
  114                         | type_specifier
  115                         | type_qualifier specifier_qualifier_list
  116                         | type_qualifier

  117 struct_declarator_list: struct_declarator
  118                       | struct_declarator_list COMMA struct_declarator

  119 struct_declarator: declarator
  120                  | COLON constant_expression
  121                  | declarator COLON constant_expression

  122 enum_specifier: ENUM L_CURL enumerator_list R_CURL
  123               | ENUM IDENTIFIER L_CURL enumerator_list R_CURL
  124               | ENUM IDENTIFIER

  125 enumerator_list: enumerator
  126                | enumerator_list COMMA enumerator

  127 enumerator: IDENTIFIER
  128           | IDENTIFIER EQ_SIGN constant_expression

  129 type_qualifier: CONST
  130               | VOLATILE

  131 declarator: pointer direct_declarator
  132           | direct_declarator

  133 direct_declarator: IDENTIFIER
  134                  | L_BRAC declarator R_BRAC
  135                  | direct_declarator L_SQ constant_expression R_SQ
  136                  | direct_declarator L_SQ R_SQ
  137                  | direct_declarator L_BRAC parameter_type_list R_BRAC
  138                  | direct_declarator L_BRAC identifier_list R_BRAC
  139                  | direct_declarator L_BRAC R_BRAC

  140 pointer: PTR_TIMES
  141        | PTR_TIMES type_qualifier_list
  142        | PTR_TIMES pointer
  143        | PTR_TIMES type_qualifier_list pointer

  144 type_qualifier_list: type_qualifier
  145                    | type_qualifier_list type_qualifier

  146 parameter_type_list: parameter_list
  147                    | parameter_list COMMA ELLIPSIS

  148 parameter_list: parameter_declaration
  149               | parameter_list COMMA parameter_declaration

  150 parameter_declaration: declaration_specifiers declarator
  151                      | declaration_specifiers abstract_declarator
  152                      | declaration_specifiers

  153 identifier_list: IDENTIFIER
  154                | identifier_list COMMA IDENTIFIER

  155 type_name: specifier_qualifier_list
  156          | specifier_qualifier_list abstract_declarator

  157 abstract_declarator: pointer
  158                    | direct_abstract_declarator
  159                    | pointer direct_abstract_declarator

  160 direct_abstract_declarator: L_BRAC abstract_declarator R_BRAC
  161                           | L_SQ L_SQ
  162                           | L_SQ constant_expression R_SQ
  163                           | direct_abstract_declarator L_SQ L_SQ
  164                           | direct_abstract_declarator L_SQ constant_expression R_SQ
  165                           | L_BRAC R_BRAC
  166                           | L_BRAC parameter_type_list R_BRAC
  167                           | direct_abstract_declarator L_BRAC R_BRAC
  168                           | direct_abstract_declarator L_BRAC parameter_type_list R_BRAC

  169 initializer: assignment_expression
  170            | L_CURL initializer_list R_CURL
  171            | L_CURL initializer_list COMMA R_CURL

  172 initializer_list: initializer
  173                 | initializer_list COMMA initializer

  174 statement: labeled_statement
  175          | compound_statement
  176          | expression_statement
  177          | selection_statement
  178          | iteration_statement
  179          | jump_statement

  180 labeled_statement: IDENTIFIER COLON statement
  181                  | CASE constant_expression COLON statement
  182                  | DEFAULT COLON statement

  183 compound_statement: L_CURL R_CURL
  184                   | L_CURL statement_list R_CURL
  185                   | L_CURL declaration_list R_CURL
  186                   | L_CURL declaration_list statement_list R_CURL

  187 declaration_list: declaration
  188                 | declaration_list declaration

  189 statement_list: statement
  190               | statement_list statement

  191 expression_statement: SEMI
  192                     | expression SEMI

  193 selection_statement: IF L_BRAC expression R_BRAC statement
  194                    | IF L_BRAC expression R_BRAC statement ELSE statement
  195                    | SWITCH L_BRAC expression R_BRAC statement

  196 iteration_statement: WHILE L_BRAC expression R_BRAC statement
  197                    | DO statement WHILE L_BRAC expression R_BRAC SEMI
  198                    | FOR L_BRAC expression_statement expression_statement R_BRAC statement
  199                    | FOR L_BRAC expression_statement expression_statement expression R_BRAC statement

  200 jump_statement: GOTO IDENTIFIER SEMI
  201               | CONTINUE SEMI
  202               | BREAK SEMI
  203               | RETURN SEMI
  204               | RETURN expression SEMI

  205 program: translation_unit

  206 translation_unit: external_declaration
  207                 | translation_unit external_declaration

  208 external_declaration: function_definition
  209                     | declaration

  210 function_definition: declaration_specifiers declarator declaration_list compound_statement
  211                    | declaration_specifiers declarator compound_statement
  212                    | declarator declaration_list compound_statement
  213                    | declarator compound_statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <string> (258) 1 9 10 105 107 123 124 127 128 133 153 154 180 200
    CONSTANT <string> (259) 2
    STRING_LITERAL <string> (260) 3
    SIZEOF <string> (261) 19 20
    PTR_OP <string> (262) 10
    INC_OP <string> (263) 11 16
    DEC_OP <string> (264) 12 17
    LEFT_OP <string> (265) 37
    RIGHT_OP <string> (266) 38
    LE_OP <string> (267) 42
    GE_OP <string> (268) 43
    EQ_OP <string> (269) 45
    NE_OP <string> (270) 46
    AND_OP <string> (271) 54
    OR_OP <string> (272) 56
    MUL_ASSIGN <string> (273) 62
    DIV_ASSIGN <string> (274) 63
    MOD_ASSIGN <string> (275) 64
    ADD_ASSIGN <string> (276) 65
    SUB_ASSIGN <string> (277) 66
    LEFT_ASSIGN <string> (278) 67
    RIGHT_ASSIGN <string> (279) 68
    AND_ASSIGN <string> (280) 69
    XOR_ASSIGN <string> (281) 70
    OR_ASSIGN <string> (282) 71
    TYPE_NAME <string> (283) 104
    TYPEDEF <string> (284) 88
    EXTERN <string> (285) 89
    STATIC <string> (286) 90
    AUTO <string> (287) 91
    REGISTER <string> (288) 92
    CHAR <string> (289) 94
    SHORT <string> (290) 95
    INT <string> (291) 96
    LONG <string> (292) 97
    SIGNED <string> (293) 100
    UNSIGNED <string> (294) 101
    FLOAT <string> (295) 98
    DOUBLE <string> (296) 99
    CONST <string> (297) 129
    VOLATILE <string> (298) 130
    VOID <string> (299) 93
    STRUCT <string> (300) 108
    UNION (301) 109
    ENUM <string> (302) 122 123 124
    ELLIPSIS (303) 147
    CASE <string> (304) 181
    DEFAULT <string> (305) 182
    IF <string> (306) 193 194
    ELSE <string> (307) 194
    SWITCH <string> (308) 195
    WHILE <string> (309) 196 197
    DO (310) 197
    FOR <string> (311) 198 199
    GOTO <string> (312) 200
    CONTINUE <string> (313) 201
    BREAK <string> (314) 202
    RETURN <string> (315) 203 204
    L_BRAC <string> (316) 4 7 8 20 28 134 137 138 139 160 165 166 167 168 193 194 195 196 197 198 199
    R_BRAC <string> (317) 4 7 8 20 28 134 137 138 139 160 165 166 167 168 193 194 195 196 197 198 199
    L_SQ <string> (318) 6 135 136 161 162 163 164
    R_SQ <string> (319) 6 135 136 162 164
    L_CURL <string> (320) 105 106 122 123 170 171 183 184 185 186
    R_CURL <string> (321) 105 106 122 123 170 171 183 184 185 186
    SEMI <string> (322) 75 76 112 191 192 197 200 201 202 203 204
    COMMA <string> (323) 14 73 85 118 126 147 149 154 171 173
    DOT <string> (324) 9
    COLON <string> (325) 58 120 121 180 181 182
    EQ_SIGN <string> (326) 61 87 128
    AND_UNARY <string> (327) 21 48
    EXCLA <string> (328) 26
    TILDE <string> (329) 25
    SUB_OP <string> (330) 24 35
    ADD_UNARY <string> (331) 23 34
    PTR_TIMES <string> (332) 22 30 140 141 142 143
    DIV_OP <string> (333) 31
    MOD_OP <string> (334) 32
    LT_OP <string> (335) 40
    GT_OP <string> (336) 41
    XOR_OP <string> (337) 50
    OR_UNARY <string> (338) 52
    TERNARY_OP <string> (339) 58
    END (340)
    NOELSE <string> (341)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    primary_expression <node> (88)
        on left: 1 2 3 4
        on right: 5
    postfix_expression <node> (89)
        on left: 5 6 7 8 9 10 11 12
        on right: 6 7 8 9 10 11 12 15
    argument_expression_list <node> (90)
        on left: 13 14
        on right: 8 14
    unary_expression <node> (91)
        on left: 15 16 17 18 19 20
        on right: 16 17 19 27 60
    unary_operator <node> (92)
        on left: 21 22 23 24 25 26
        on right: 18
    cast_expression <node> (93)
        on left: 27 28
        on right: 18 28 29 30 31 32
    multiplicative_expression <node> (94)
        on left: 29 30 31 32
        on right: 30 31 32 33 34 35
    additive_expression <node> (95)
        on left: 33 34 35
        on right: 34 35 36 37 38
    shift_expression <node> (96)
        on left: 36 37 38
        on right: 37 38 39 40 41 42 43
    relational_expression <node> (97)
        on left: 39 40 41 42 43
        on right: 40 41 42 43 44 45 46
    equality_expression <node> (98)
        on left: 44 45 46
        on right: 45 46 47 48
    and_expression <node> (99)
        on left: 47 48
        on right: 48 49 50
    exclusive_or_expression <node> (100)
        on left: 49 50
        on right: 50 51 52
    inclusive_or_expression <node> (101)
        on left: 51 52
        on right: 52 53 54
    logical_and_expression <node> (102)
        on left: 53 54
        on right: 54 55 56
    logical_or_expression <node> (103)
        on left: 55 56
        on right: 56 57 58
    conditional_expression <node> (104)
        on left: 57 58
        on right: 58 59 74
    assignment_expression <node> (105)
        on left: 59 60
        on right: 13 14 60 72 73 169
    assignment_operator <node> (106)
        on left: 61 62 63 64 65 66 67 68 69 70 71
        on right: 60
    expression <node> (107)
        on left: 72 73
        on right: 4 6 58 73 192 193 194 195 196 197 199 204
    constant_expression <node> (108)
        on left: 74
        on right: 120 121 128 135 162 164 181
    declaration <node> (109)
        on left: 75 76
        on right: 187 188 209
    declaration_specifiers <node> (110)
        on left: 77 78 79 80 81 82
        on right: 75 76 78 80 82 150 151 152 210 211
    init_declarator_list <node> (111)
        on left: 83 85
        on right: 76 85
    $@1 (112)
        on left: 84
        on right: 85
    init_declarator <node> (113)
        on left: 86 87
        on right: 83 85
    storage_class_specifier <node> (114)
        on left: 88 89 90 91 92
        on right: 77 78
    type_specifier <node> (115)
        on left: 93 94 95 96 97 98 99 100 101 102 103 104
        on right: 79 80 113 114
    struct_or_union_specifier <node> (116)
        on left: 105 106 107
        on right: 102
    struct_or_union <node> (117)
        on left: 108 109
        on right: 105 106 107
    struct_declaration_list <node> (118)
        on left: 110 111
        on right: 105 106 111
    struct_declaration <node> (119)
        on left: 112
        on right: 110 111
    specifier_qualifier_list <node> (120)
        on left: 113 114 115 116
        on right: 112 113 115 155 156
    struct_declarator_list <node> (121)
        on left: 117 118
        on right: 112 118
    struct_declarator <node> (122)
        on left: 119 120 121
        on right: 117 118
    enum_specifier <node> (123)
        on left: 122 123 124
        on right: 103
    enumerator_list <node> (124)
        on left: 125 126
        on right: 122 123 126
    enumerator <node> (125)
        on left: 127 128
        on right: 125 126
    type_qualifier <node> (126)
        on left: 129 130
        on right: 81 82 115 116 144 145
    declarator <node> (127)
        on left: 131 132
        on right: 86 87 119 121 134 150 210 211 212 213
    direct_declarator <node> (128)
        on left: 133 134 135 136 137 138 139
        on right: 131 132 135 136 137 138 139
    pointer <node> (129)
        on left: 140 141 142 143
        on right: 131 142 143 157 159
    type_qualifier_list <node> (130)
        on left: 144 145
        on right: 141 143 145
    parameter_type_list <node> (131)
        on left: 146 147
        on right: 137 166 168
    parameter_list <node> (132)
        on left: 148 149
        on right: 146 147 149
    parameter_declaration <node> (133)
        on left: 150 151 152
        on right: 148 149
    identifier_list <node> (134)
        on left: 153 154
        on right: 138 154
    type_name <node> (135)
        on left: 155 156
        on right: 20 28
    abstract_declarator <node> (136)
        on left: 157 158 159
        on right: 151 156 160
    direct_abstract_declarator <node> (137)
        on left: 160 161 162 163 164 165 166 167 168
        on right: 158 159 163 164 167 168
    initializer <node> (138)
        on left: 169 170 171
        on right: 87 172 173
    initializer_list <node> (139)
        on left: 172 173
        on right: 170 171 173
    statement <node> (140)
        on left: 174 175 176 177 178 179
        on right: 180 181 182 189 190 193 194 195 196 197 198 199
    labeled_statement <node> (141)
        on left: 180 181 182
        on right: 174
    compound_statement <node> (142)
        on left: 183 184 185 186
        on right: 175 210 211 212 213
    declaration_list <node> (143)
        on left: 187 188
        on right: 185 186 188 210 212
    statement_list <node> (144)
        on left: 189 190
        on right: 184 186 190
    expression_statement <node> (145)
        on left: 191 192
        on right: 176 198 199
    selection_statement <node> (146)
        on left: 193 194 195
        on right: 177
    iteration_statement <node> (147)
        on left: 196 197 198 199
        on right: 178
    jump_statement <node> (148)
        on left: 200 201 202 203 204
        on right: 179
    program <node> (149)
        on left: 205
        on right: 0
    translation_unit <node> (150)
        on left: 206 207
        on right: 205 207
    external_declaration <node> (151)
        on left: 208 209
        on right: 206 207
    function_definition <node> (152)
        on left: 210 211 212 213
        on right: 208


State 0

    0 $accept: . program $end

    IDENTIFIER  shift, and go to state 1
    TYPE_NAME   shift, and go to state 2
    TYPEDEF     shift, and go to state 3
    EXTERN      shift, and go to state 4
    STATIC      shift, and go to state 5
    AUTO        shift, and go to state 6
    REGISTER    shift, and go to state 7
    CHAR        shift, and go to state 8
    SHORT       shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    CONST       shift, and go to state 16
    VOLATILE    shift, and go to state 17
    VOID        shift, and go to state 18
    STRUCT      shift, and go to state 19
    UNION       shift, and go to state 20
    ENUM        shift, and go to state 21
    L_BRAC      shift, and go to state 22
    PTR_TIMES   shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    declarator                 go to state 32
    direct_declarator          go to state 33
    pointer                    go to state 34
    program                    go to state 35
    translation_unit           go to state 36
    external_declaration       go to state 37
    function_definition        go to state 38


State 1

  133 direct_declarator: IDENTIFIER .

    $default  reduce using rule 133 (direct_declarator)


State 2

  104 type_specifier: TYPE_NAME .

    $default  reduce using rule 104 (type_specifier)


State 3

   88 storage_class_specifier: TYPEDEF .

    $default  reduce using rule 88 (storage_class_specifier)


State 4

   89 storage_class_specifier: EXTERN .

    $default  reduce using rule 89 (storage_class_specifier)


State 5

   90 storage_class_specifier: STATIC .

    $default  reduce using rule 90 (storage_class_specifier)


State 6

   91 storage_class_specifier: AUTO .

    $default  reduce using rule 91 (storage_class_specifier)


State 7

   92 storage_class_specifier: REGISTER .

    $default  reduce using rule 92 (storage_class_specifier)


State 8

   94 type_specifier: CHAR .

    $default  reduce using rule 94 (type_specifier)


State 9

   95 type_specifier: SHORT .

    $default  reduce using rule 95 (type_specifier)


State 10

   96 type_specifier: INT .

    $default  reduce using rule 96 (type_specifier)


State 11

   97 type_specifier: LONG .

    $default  reduce using rule 97 (type_specifier)


State 12

  100 type_specifier: SIGNED .

    $default  reduce using rule 100 (type_specifier)


State 13

  101 type_specifier: UNSIGNED .

    $default  reduce using rule 101 (type_specifier)


State 14

   98 type_specifier: FLOAT .

    $default  reduce using rule 98 (type_specifier)


State 15

   99 type_specifier: DOUBLE .

    $default  reduce using rule 99 (type_specifier)


State 16

  129 type_qualifier: CONST .

    $default  reduce using rule 129 (type_qualifier)


State 17

  130 type_qualifier: VOLATILE .

    $default  reduce using rule 130 (type_qualifier)


State 18

   93 type_specifier: VOID .

    $default  reduce using rule 93 (type_specifier)


State 19

  108 struct_or_union: STRUCT .

    $default  reduce using rule 108 (struct_or_union)


State 20

  109 struct_or_union: UNION .

    $default  reduce using rule 109 (struct_or_union)


State 21

  122 enum_specifier: ENUM . L_CURL enumerator_list R_CURL
  123               | ENUM . IDENTIFIER L_CURL enumerator_list R_CURL
  124               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 39
    L_CURL      shift, and go to state 40


State 22

  134 direct_declarator: L_BRAC . declarator R_BRAC

    IDENTIFIER  shift, and go to state 1
    L_BRAC      shift, and go to state 22
    PTR_TIMES   shift, and go to state 23

    declarator         go to state 41
    direct_declarator  go to state 33
    pointer            go to state 34


State 23

  140 pointer: PTR_TIMES .
  141        | PTR_TIMES . type_qualifier_list
  142        | PTR_TIMES . pointer
  143        | PTR_TIMES . type_qualifier_list pointer

    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    PTR_TIMES  shift, and go to state 23

    $default  reduce using rule 140 (pointer)

    type_qualifier       go to state 42
    pointer              go to state 43
    type_qualifier_list  go to state 44


State 24

  209 external_declaration: declaration .

    $default  reduce using rule 209 (external_declaration)


State 25

   75 declaration: declaration_specifiers . SEMI
   76            | declaration_specifiers . init_declarator_list SEMI
  210 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  211                    | declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 1
    L_BRAC      shift, and go to state 22
    SEMI        shift, and go to state 45
    PTR_TIMES   shift, and go to state 23

    init_declarator_list  go to state 46
    init_declarator       go to state 47
    declarator            go to state 48
    direct_declarator     go to state 33
    pointer               go to state 34


State 26

   77 declaration_specifiers: storage_class_specifier .
   78                       | storage_class_specifier . declaration_specifiers

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 77 (declaration_specifiers)

    declaration_specifiers     go to state 49
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31


State 27

   79 declaration_specifiers: type_specifier .
   80                       | type_specifier . declaration_specifiers

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 79 (declaration_specifiers)

    declaration_specifiers     go to state 50
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31


State 28

  102 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 102 (type_specifier)


State 29

  105 struct_or_union_specifier: struct_or_union . IDENTIFIER L_CURL struct_declaration_list R_CURL
  106                          | struct_or_union . L_CURL struct_declaration_list R_CURL
  107                          | struct_or_union . IDENTIFIER

    IDENTIFIER  shift, and go to state 51
    L_CURL      shift, and go to state 52


State 30

  103 type_specifier: enum_specifier .

    $default  reduce using rule 103 (type_specifier)


State 31

   81 declaration_specifiers: type_qualifier .
   82                       | type_qualifier . declaration_specifiers

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 81 (declaration_specifiers)

    declaration_specifiers     go to state 53
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31


State 32

  212 function_definition: declarator . declaration_list compound_statement
  213                    | declarator . compound_statement

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21
    L_CURL     shift, and go to state 54

    declaration                go to state 55
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    compound_statement         go to state 57
    declaration_list           go to state 58


State 33

  132 declarator: direct_declarator .
  135 direct_declarator: direct_declarator . L_SQ constant_expression R_SQ
  136                  | direct_declarator . L_SQ R_SQ
  137                  | direct_declarator . L_BRAC parameter_type_list R_BRAC
  138                  | direct_declarator . L_BRAC identifier_list R_BRAC
  139                  | direct_declarator . L_BRAC R_BRAC

    L_BRAC  shift, and go to state 59
    L_SQ    shift, and go to state 60

    $default  reduce using rule 132 (declarator)


State 34

  131 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 1
    L_BRAC      shift, and go to state 22

    direct_declarator  go to state 61


State 35

    0 $accept: program . $end

    $end  shift, and go to state 62


State 36

  205 program: translation_unit .
  207 translation_unit: translation_unit . external_declaration

    IDENTIFIER  shift, and go to state 1
    TYPE_NAME   shift, and go to state 2
    TYPEDEF     shift, and go to state 3
    EXTERN      shift, and go to state 4
    STATIC      shift, and go to state 5
    AUTO        shift, and go to state 6
    REGISTER    shift, and go to state 7
    CHAR        shift, and go to state 8
    SHORT       shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    CONST       shift, and go to state 16
    VOLATILE    shift, and go to state 17
    VOID        shift, and go to state 18
    STRUCT      shift, and go to state 19
    UNION       shift, and go to state 20
    ENUM        shift, and go to state 21
    L_BRAC      shift, and go to state 22
    PTR_TIMES   shift, and go to state 23

    $default  reduce using rule 205 (program)

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    declarator                 go to state 32
    direct_declarator          go to state 33
    pointer                    go to state 34
    external_declaration       go to state 63
    function_definition        go to state 38


State 37

  206 translation_unit: external_declaration .

    $default  reduce using rule 206 (translation_unit)


State 38

  208 external_declaration: function_definition .

    $default  reduce using rule 208 (external_declaration)


State 39

  123 enum_specifier: ENUM IDENTIFIER . L_CURL enumerator_list R_CURL
  124               | ENUM IDENTIFIER .

    L_CURL  shift, and go to state 64

    $default  reduce using rule 124 (enum_specifier)


State 40

  122 enum_specifier: ENUM L_CURL . enumerator_list R_CURL

    IDENTIFIER  shift, and go to state 65

    enumerator_list  go to state 66
    enumerator       go to state 67


State 41

  134 direct_declarator: L_BRAC declarator . R_BRAC

    R_BRAC  shift, and go to state 68


State 42

  144 type_qualifier_list: type_qualifier .

    $default  reduce using rule 144 (type_qualifier_list)


State 43

  142 pointer: PTR_TIMES pointer .

    $default  reduce using rule 142 (pointer)


State 44

  141 pointer: PTR_TIMES type_qualifier_list .
  143        | PTR_TIMES type_qualifier_list . pointer
  145 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    PTR_TIMES  shift, and go to state 23

    $default  reduce using rule 141 (pointer)

    type_qualifier  go to state 69
    pointer         go to state 70


State 45

   75 declaration: declaration_specifiers SEMI .

    $default  reduce using rule 75 (declaration)


State 46

   76 declaration: declaration_specifiers init_declarator_list . SEMI
   85 init_declarator_list: init_declarator_list . COMMA init_declarator $@1

    SEMI   shift, and go to state 71
    COMMA  shift, and go to state 72


State 47

   83 init_declarator_list: init_declarator .

    $default  reduce using rule 83 (init_declarator_list)


State 48

   86 init_declarator: declarator .
   87                | declarator . EQ_SIGN initializer
  210 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  211                    | declaration_specifiers declarator . compound_statement

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21
    L_CURL     shift, and go to state 54
    EQ_SIGN    shift, and go to state 73

    $default  reduce using rule 86 (init_declarator)

    declaration                go to state 55
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    compound_statement         go to state 74
    declaration_list           go to state 75


State 49

   78 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 78 (declaration_specifiers)


State 50

   80 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 80 (declaration_specifiers)


State 51

  105 struct_or_union_specifier: struct_or_union IDENTIFIER . L_CURL struct_declaration_list R_CURL
  107                          | struct_or_union IDENTIFIER .

    L_CURL  shift, and go to state 76

    $default  reduce using rule 107 (struct_or_union_specifier)


State 52

  106 struct_or_union_specifier: struct_or_union L_CURL . struct_declaration_list R_CURL

    TYPE_NAME  shift, and go to state 2
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21

    type_specifier             go to state 77
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 78
    struct_declaration         go to state 79
    specifier_qualifier_list   go to state 80
    enum_specifier             go to state 30
    type_qualifier             go to state 81


State 53

   82 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 82 (declaration_specifiers)


State 54

  183 compound_statement: L_CURL . R_CURL
  184                   | L_CURL . statement_list R_CURL
  185                   | L_CURL . declaration_list R_CURL
  186                   | L_CURL . declaration_list statement_list R_CURL

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    TYPE_NAME       shift, and go to state 2
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    CHAR            shift, and go to state 8
    SHORT           shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    FLOAT           shift, and go to state 14
    DOUBLE          shift, and go to state 15
    CONST           shift, and go to state 16
    VOLATILE        shift, and go to state 17
    VOID            shift, and go to state 18
    STRUCT          shift, and go to state 19
    UNION           shift, and go to state 20
    ENUM            shift, and go to state 21
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    R_CURL          shift, and go to state 100
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    declaration                go to state 55
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    statement                  go to state 126
    labeled_statement          go to state 127
    compound_statement         go to state 128
    declaration_list           go to state 129
    statement_list             go to state 130
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 55

  187 declaration_list: declaration .

    $default  reduce using rule 187 (declaration_list)


State 56

   75 declaration: declaration_specifiers . SEMI
   76            | declaration_specifiers . init_declarator_list SEMI

    IDENTIFIER  shift, and go to state 1
    L_BRAC      shift, and go to state 22
    SEMI        shift, and go to state 45
    PTR_TIMES   shift, and go to state 23

    init_declarator_list  go to state 46
    init_declarator       go to state 47
    declarator            go to state 135
    direct_declarator     go to state 33
    pointer               go to state 34


State 57

  213 function_definition: declarator compound_statement .

    $default  reduce using rule 213 (function_definition)


State 58

  188 declaration_list: declaration_list . declaration
  212 function_definition: declarator declaration_list . compound_statement

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21
    L_CURL     shift, and go to state 54

    declaration                go to state 136
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    compound_statement         go to state 137


State 59

  137 direct_declarator: direct_declarator L_BRAC . parameter_type_list R_BRAC
  138                  | direct_declarator L_BRAC . identifier_list R_BRAC
  139                  | direct_declarator L_BRAC . R_BRAC

    IDENTIFIER  shift, and go to state 138
    TYPE_NAME   shift, and go to state 2
    TYPEDEF     shift, and go to state 3
    EXTERN      shift, and go to state 4
    STATIC      shift, and go to state 5
    AUTO        shift, and go to state 6
    REGISTER    shift, and go to state 7
    CHAR        shift, and go to state 8
    SHORT       shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    CONST       shift, and go to state 16
    VOLATILE    shift, and go to state 17
    VOID        shift, and go to state 18
    STRUCT      shift, and go to state 19
    UNION       shift, and go to state 20
    ENUM        shift, and go to state 21
    R_BRAC      shift, and go to state 139

    declaration_specifiers     go to state 140
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    parameter_type_list        go to state 141
    parameter_list             go to state 142
    parameter_declaration      go to state 143
    identifier_list            go to state 144


State 60

  135 direct_declarator: direct_declarator L_SQ . constant_expression R_SQ
  136                  | direct_declarator L_SQ . R_SQ

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    R_SQ            shift, and go to state 146
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 148
    constant_expression        go to state 149


State 61

  131 declarator: pointer direct_declarator .
  135 direct_declarator: direct_declarator . L_SQ constant_expression R_SQ
  136                  | direct_declarator . L_SQ R_SQ
  137                  | direct_declarator . L_BRAC parameter_type_list R_BRAC
  138                  | direct_declarator . L_BRAC identifier_list R_BRAC
  139                  | direct_declarator . L_BRAC R_BRAC

    L_BRAC  shift, and go to state 59
    L_SQ    shift, and go to state 60

    $default  reduce using rule 131 (declarator)


State 62

    0 $accept: program $end .

    $default  accept


State 63

  207 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 207 (translation_unit)


State 64

  123 enum_specifier: ENUM IDENTIFIER L_CURL . enumerator_list R_CURL

    IDENTIFIER  shift, and go to state 65

    enumerator_list  go to state 150
    enumerator       go to state 67


State 65

  127 enumerator: IDENTIFIER .
  128           | IDENTIFIER . EQ_SIGN constant_expression

    EQ_SIGN  shift, and go to state 151

    $default  reduce using rule 127 (enumerator)


State 66

  122 enum_specifier: ENUM L_CURL enumerator_list . R_CURL
  126 enumerator_list: enumerator_list . COMMA enumerator

    R_CURL  shift, and go to state 152
    COMMA   shift, and go to state 153


State 67

  125 enumerator_list: enumerator .

    $default  reduce using rule 125 (enumerator_list)


State 68

  134 direct_declarator: L_BRAC declarator R_BRAC .

    $default  reduce using rule 134 (direct_declarator)


State 69

  145 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 145 (type_qualifier_list)


State 70

  143 pointer: PTR_TIMES type_qualifier_list pointer .

    $default  reduce using rule 143 (pointer)


State 71

   76 declaration: declaration_specifiers init_declarator_list SEMI .

    $default  reduce using rule 76 (declaration)


State 72

   85 init_declarator_list: init_declarator_list COMMA . init_declarator $@1

    IDENTIFIER  shift, and go to state 1
    L_BRAC      shift, and go to state 22
    PTR_TIMES   shift, and go to state 23

    init_declarator    go to state 154
    declarator         go to state 135
    direct_declarator  go to state 33
    pointer            go to state 34


State 73

   87 init_declarator: declarator EQ_SIGN . initializer

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 155
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 156
    initializer                go to state 157


State 74

  211 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 211 (function_definition)


State 75

  188 declaration_list: declaration_list . declaration
  210 function_definition: declaration_specifiers declarator declaration_list . compound_statement

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21
    L_CURL     shift, and go to state 54

    declaration                go to state 136
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    compound_statement         go to state 158


State 76

  105 struct_or_union_specifier: struct_or_union IDENTIFIER L_CURL . struct_declaration_list R_CURL

    TYPE_NAME  shift, and go to state 2
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21

    type_specifier             go to state 77
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 159
    struct_declaration         go to state 79
    specifier_qualifier_list   go to state 80
    enum_specifier             go to state 30
    type_qualifier             go to state 81


State 77

  113 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  114                         | type_specifier .

    TYPE_NAME  shift, and go to state 2
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 114 (specifier_qualifier_list)

    type_specifier             go to state 77
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    specifier_qualifier_list   go to state 160
    enum_specifier             go to state 30
    type_qualifier             go to state 81


State 78

  106 struct_or_union_specifier: struct_or_union L_CURL struct_declaration_list . R_CURL
  111 struct_declaration_list: struct_declaration_list . struct_declaration

    TYPE_NAME  shift, and go to state 2
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21
    R_CURL     shift, and go to state 161

    type_specifier             go to state 77
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 162
    specifier_qualifier_list   go to state 80
    enum_specifier             go to state 30
    type_qualifier             go to state 81


State 79

  110 struct_declaration_list: struct_declaration .

    $default  reduce using rule 110 (struct_declaration_list)


State 80

  112 struct_declaration: specifier_qualifier_list . struct_declarator_list SEMI

    IDENTIFIER  shift, and go to state 1
    L_BRAC      shift, and go to state 22
    COLON       shift, and go to state 163
    PTR_TIMES   shift, and go to state 23

    struct_declarator_list  go to state 164
    struct_declarator       go to state 165
    declarator              go to state 166
    direct_declarator       go to state 33
    pointer                 go to state 34


State 81

  115 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  116                         | type_qualifier .

    TYPE_NAME  shift, and go to state 2
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21

    $default  reduce using rule 116 (specifier_qualifier_list)

    type_specifier             go to state 77
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    specifier_qualifier_list   go to state 167
    enum_specifier             go to state 30
    type_qualifier             go to state 81


State 82

    1 primary_expression: IDENTIFIER .
  180 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 168

    $default  reduce using rule 1 (primary_expression)


State 83

    2 primary_expression: CONSTANT .

    $default  reduce using rule 2 (primary_expression)


State 84

    3 primary_expression: STRING_LITERAL .

    $default  reduce using rule 3 (primary_expression)


State 85

   19 unary_expression: SIZEOF . unary_expression
   20                 | SIZEOF . L_BRAC type_name R_BRAC

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 169
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression  go to state 108
    postfix_expression  go to state 109
    unary_expression    go to state 170
    unary_operator      go to state 111


State 86

   16 unary_expression: INC_OP . unary_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 171
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression  go to state 108
    postfix_expression  go to state 109
    unary_expression    go to state 172
    unary_operator      go to state 111


State 87

   17 unary_expression: DEC_OP . unary_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 171
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression  go to state 108
    postfix_expression  go to state 109
    unary_expression    go to state 173
    unary_operator      go to state 111


State 88

  181 labeled_statement: CASE . constant_expression COLON statement

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 148
    constant_expression        go to state 174


State 89

  182 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 175


State 90

  193 selection_statement: IF . L_BRAC expression R_BRAC statement
  194                    | IF . L_BRAC expression R_BRAC statement ELSE statement

    L_BRAC  shift, and go to state 176


State 91

  195 selection_statement: SWITCH . L_BRAC expression R_BRAC statement

    L_BRAC  shift, and go to state 177


State 92

  196 iteration_statement: WHILE . L_BRAC expression R_BRAC statement

    L_BRAC  shift, and go to state 178


State 93

  197 iteration_statement: DO . statement WHILE L_BRAC expression R_BRAC SEMI

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 179
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 94

  198 iteration_statement: FOR . L_BRAC expression_statement expression_statement R_BRAC statement
  199                    | FOR . L_BRAC expression_statement expression_statement expression R_BRAC statement

    L_BRAC  shift, and go to state 180


State 95

  200 jump_statement: GOTO . IDENTIFIER SEMI

    IDENTIFIER  shift, and go to state 181


State 96

  201 jump_statement: CONTINUE . SEMI

    SEMI  shift, and go to state 182


State 97

  202 jump_statement: BREAK . SEMI

    SEMI  shift, and go to state 183


State 98

  203 jump_statement: RETURN . SEMI
  204               | RETURN . expression SEMI

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    SEMI            shift, and go to state 184
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 185


State 99

    4 primary_expression: L_BRAC . expression R_BRAC
   28 cast_expression: L_BRAC . type_name R_BRAC cast_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    TYPE_NAME       shift, and go to state 2
    CHAR            shift, and go to state 8
    SHORT           shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    FLOAT           shift, and go to state 14
    DOUBLE          shift, and go to state 15
    CONST           shift, and go to state 16
    VOLATILE        shift, and go to state 17
    VOID            shift, and go to state 18
    STRUCT          shift, and go to state 19
    UNION           shift, and go to state 20
    ENUM            shift, and go to state 21
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 186
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    specifier_qualifier_list   go to state 187
    enum_specifier             go to state 30
    type_qualifier             go to state 81
    type_name                  go to state 188


State 100

  183 compound_statement: L_CURL R_CURL .

    $default  reduce using rule 183 (compound_statement)


State 101

  191 expression_statement: SEMI .

    $default  reduce using rule 191 (expression_statement)


State 102

   21 unary_operator: AND_UNARY .

    $default  reduce using rule 21 (unary_operator)


State 103

   26 unary_operator: EXCLA .

    $default  reduce using rule 26 (unary_operator)


State 104

   25 unary_operator: TILDE .

    $default  reduce using rule 25 (unary_operator)


State 105

   24 unary_operator: SUB_OP .

    $default  reduce using rule 24 (unary_operator)


State 106

   23 unary_operator: ADD_UNARY .

    $default  reduce using rule 23 (unary_operator)


State 107

   22 unary_operator: PTR_TIMES .

    $default  reduce using rule 22 (unary_operator)


State 108

    5 postfix_expression: primary_expression .

    $default  reduce using rule 5 (postfix_expression)


State 109

    6 postfix_expression: postfix_expression . L_SQ expression R_SQ
    7                   | postfix_expression . L_BRAC R_BRAC
    8                   | postfix_expression . L_BRAC argument_expression_list R_BRAC
    9                   | postfix_expression . DOT IDENTIFIER
   10                   | postfix_expression . PTR_OP IDENTIFIER
   11                   | postfix_expression . INC_OP
   12                   | postfix_expression . DEC_OP
   15 unary_expression: postfix_expression .

    PTR_OP  shift, and go to state 189
    INC_OP  shift, and go to state 190
    DEC_OP  shift, and go to state 191
    L_BRAC  shift, and go to state 192
    L_SQ    shift, and go to state 193
    DOT     shift, and go to state 194

    $default  reduce using rule 15 (unary_expression)


State 110

   27 cast_expression: unary_expression .
   60 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN    shift, and go to state 195
    DIV_ASSIGN    shift, and go to state 196
    MOD_ASSIGN    shift, and go to state 197
    ADD_ASSIGN    shift, and go to state 198
    SUB_ASSIGN    shift, and go to state 199
    LEFT_ASSIGN   shift, and go to state 200
    RIGHT_ASSIGN  shift, and go to state 201
    AND_ASSIGN    shift, and go to state 202
    XOR_ASSIGN    shift, and go to state 203
    OR_ASSIGN     shift, and go to state 204
    EQ_SIGN       shift, and go to state 205

    $default  reduce using rule 27 (cast_expression)

    assignment_operator  go to state 206


State 111

   18 unary_expression: unary_operator . cast_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression  go to state 108
    postfix_expression  go to state 109
    unary_expression    go to state 147
    unary_operator      go to state 111
    cast_expression     go to state 207


State 112

   29 multiplicative_expression: cast_expression .

    $default  reduce using rule 29 (multiplicative_expression)


State 113

   30 multiplicative_expression: multiplicative_expression . PTR_TIMES cast_expression
   31                          | multiplicative_expression . DIV_OP cast_expression
   32                          | multiplicative_expression . MOD_OP cast_expression
   33 additive_expression: multiplicative_expression .

    PTR_TIMES  shift, and go to state 208
    DIV_OP     shift, and go to state 209
    MOD_OP     shift, and go to state 210

    $default  reduce using rule 33 (additive_expression)


State 114

   34 additive_expression: additive_expression . ADD_UNARY multiplicative_expression
   35                    | additive_expression . SUB_OP multiplicative_expression
   36 shift_expression: additive_expression .

    SUB_OP     shift, and go to state 211
    ADD_UNARY  shift, and go to state 212

    $default  reduce using rule 36 (shift_expression)


State 115

   37 shift_expression: shift_expression . LEFT_OP additive_expression
   38                 | shift_expression . RIGHT_OP additive_expression
   39 relational_expression: shift_expression .

    LEFT_OP   shift, and go to state 213
    RIGHT_OP  shift, and go to state 214

    $default  reduce using rule 39 (relational_expression)


State 116

   40 relational_expression: relational_expression . LT_OP shift_expression
   41                      | relational_expression . GT_OP shift_expression
   42                      | relational_expression . LE_OP shift_expression
   43                      | relational_expression . GE_OP shift_expression
   44 equality_expression: relational_expression .

    LE_OP  shift, and go to state 215
    GE_OP  shift, and go to state 216
    LT_OP  shift, and go to state 217
    GT_OP  shift, and go to state 218

    $default  reduce using rule 44 (equality_expression)


State 117

   45 equality_expression: equality_expression . EQ_OP relational_expression
   46                    | equality_expression . NE_OP relational_expression
   47 and_expression: equality_expression .

    EQ_OP  shift, and go to state 219
    NE_OP  shift, and go to state 220

    $default  reduce using rule 47 (and_expression)


State 118

   48 and_expression: and_expression . AND_UNARY equality_expression
   49 exclusive_or_expression: and_expression .

    AND_UNARY  shift, and go to state 221

    $default  reduce using rule 49 (exclusive_or_expression)


State 119

   50 exclusive_or_expression: exclusive_or_expression . XOR_OP and_expression
   51 inclusive_or_expression: exclusive_or_expression .

    XOR_OP  shift, and go to state 222

    $default  reduce using rule 51 (inclusive_or_expression)


State 120

   52 inclusive_or_expression: inclusive_or_expression . OR_UNARY exclusive_or_expression
   53 logical_and_expression: inclusive_or_expression .

    OR_UNARY  shift, and go to state 223

    $default  reduce using rule 53 (logical_and_expression)


State 121

   54 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   55 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 224

    $default  reduce using rule 55 (logical_or_expression)


State 122

   56 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   57 conditional_expression: logical_or_expression .
   58                       | logical_or_expression . TERNARY_OP expression COLON conditional_expression

    OR_OP       shift, and go to state 225
    TERNARY_OP  shift, and go to state 226

    $default  reduce using rule 57 (conditional_expression)


State 123

   59 assignment_expression: conditional_expression .

    $default  reduce using rule 59 (assignment_expression)


State 124

   72 expression: assignment_expression .

    $default  reduce using rule 72 (expression)


State 125

   73 expression: expression . COMMA assignment_expression
  192 expression_statement: expression . SEMI

    SEMI   shift, and go to state 227
    COMMA  shift, and go to state 228


State 126

  189 statement_list: statement .

    $default  reduce using rule 189 (statement_list)


State 127

  174 statement: labeled_statement .

    $default  reduce using rule 174 (statement)


State 128

  175 statement: compound_statement .

    $default  reduce using rule 175 (statement)


State 129

  185 compound_statement: L_CURL declaration_list . R_CURL
  186                   | L_CURL declaration_list . statement_list R_CURL
  188 declaration_list: declaration_list . declaration

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    TYPE_NAME       shift, and go to state 2
    TYPEDEF         shift, and go to state 3
    EXTERN          shift, and go to state 4
    STATIC          shift, and go to state 5
    AUTO            shift, and go to state 6
    REGISTER        shift, and go to state 7
    CHAR            shift, and go to state 8
    SHORT           shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    FLOAT           shift, and go to state 14
    DOUBLE          shift, and go to state 15
    CONST           shift, and go to state 16
    VOLATILE        shift, and go to state 17
    VOID            shift, and go to state 18
    STRUCT          shift, and go to state 19
    UNION           shift, and go to state 20
    ENUM            shift, and go to state 21
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    R_CURL          shift, and go to state 229
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    declaration                go to state 136
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    statement                  go to state 126
    labeled_statement          go to state 127
    compound_statement         go to state 128
    statement_list             go to state 230
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 130

  184 compound_statement: L_CURL statement_list . R_CURL
  190 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    R_CURL          shift, and go to state 231
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 232
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 131

  176 statement: expression_statement .

    $default  reduce using rule 176 (statement)


State 132

  177 statement: selection_statement .

    $default  reduce using rule 177 (statement)


State 133

  178 statement: iteration_statement .

    $default  reduce using rule 178 (statement)


State 134

  179 statement: jump_statement .

    $default  reduce using rule 179 (statement)


State 135

   86 init_declarator: declarator .
   87                | declarator . EQ_SIGN initializer

    EQ_SIGN  shift, and go to state 73

    $default  reduce using rule 86 (init_declarator)


State 136

  188 declaration_list: declaration_list declaration .

    $default  reduce using rule 188 (declaration_list)


State 137

  212 function_definition: declarator declaration_list compound_statement .

    $default  reduce using rule 212 (function_definition)


State 138

  153 identifier_list: IDENTIFIER .

    $default  reduce using rule 153 (identifier_list)


State 139

  139 direct_declarator: direct_declarator L_BRAC R_BRAC .

    $default  reduce using rule 139 (direct_declarator)


State 140

  150 parameter_declaration: declaration_specifiers . declarator
  151                      | declaration_specifiers . abstract_declarator
  152                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 1
    L_BRAC      shift, and go to state 233
    L_SQ        shift, and go to state 234
    PTR_TIMES   shift, and go to state 23

    $default  reduce using rule 152 (parameter_declaration)

    declarator                  go to state 235
    direct_declarator           go to state 33
    pointer                     go to state 236
    abstract_declarator         go to state 237
    direct_abstract_declarator  go to state 238


State 141

  137 direct_declarator: direct_declarator L_BRAC parameter_type_list . R_BRAC

    R_BRAC  shift, and go to state 239


State 142

  146 parameter_type_list: parameter_list .
  147                    | parameter_list . COMMA ELLIPSIS
  149 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 240

    $default  reduce using rule 146 (parameter_type_list)


State 143

  148 parameter_list: parameter_declaration .

    $default  reduce using rule 148 (parameter_list)


State 144

  138 direct_declarator: direct_declarator L_BRAC identifier_list . R_BRAC
  154 identifier_list: identifier_list . COMMA IDENTIFIER

    R_BRAC  shift, and go to state 241
    COMMA   shift, and go to state 242


State 145

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 146

  136 direct_declarator: direct_declarator L_SQ R_SQ .

    $default  reduce using rule 136 (direct_declarator)


State 147

   27 cast_expression: unary_expression .

    $default  reduce using rule 27 (cast_expression)


State 148

   74 constant_expression: conditional_expression .

    $default  reduce using rule 74 (constant_expression)


State 149

  135 direct_declarator: direct_declarator L_SQ constant_expression . R_SQ

    R_SQ  shift, and go to state 243


State 150

  123 enum_specifier: ENUM IDENTIFIER L_CURL enumerator_list . R_CURL
  126 enumerator_list: enumerator_list . COMMA enumerator

    R_CURL  shift, and go to state 244
    COMMA   shift, and go to state 153


State 151

  128 enumerator: IDENTIFIER EQ_SIGN . constant_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 148
    constant_expression        go to state 245


State 152

  122 enum_specifier: ENUM L_CURL enumerator_list R_CURL .

    $default  reduce using rule 122 (enum_specifier)


State 153

  126 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER  shift, and go to state 65

    enumerator  go to state 246


State 154

   85 init_declarator_list: init_declarator_list COMMA init_declarator . $@1

    $default  reduce using rule 84 ($@1)

    $@1  go to state 247


State 155

  170 initializer: L_CURL . initializer_list R_CURL
  171            | L_CURL . initializer_list COMMA R_CURL

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 155
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 156
    initializer                go to state 248
    initializer_list           go to state 249


State 156

  169 initializer: assignment_expression .

    $default  reduce using rule 169 (initializer)


State 157

   87 init_declarator: declarator EQ_SIGN initializer .

    $default  reduce using rule 87 (init_declarator)


State 158

  210 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 210 (function_definition)


State 159

  105 struct_or_union_specifier: struct_or_union IDENTIFIER L_CURL struct_declaration_list . R_CURL
  111 struct_declaration_list: struct_declaration_list . struct_declaration

    TYPE_NAME  shift, and go to state 2
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21
    R_CURL     shift, and go to state 250

    type_specifier             go to state 77
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 162
    specifier_qualifier_list   go to state 80
    enum_specifier             go to state 30
    type_qualifier             go to state 81


State 160

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 113 (specifier_qualifier_list)


State 161

  106 struct_or_union_specifier: struct_or_union L_CURL struct_declaration_list R_CURL .

    $default  reduce using rule 106 (struct_or_union_specifier)


State 162

  111 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 111 (struct_declaration_list)


State 163

  120 struct_declarator: COLON . constant_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 148
    constant_expression        go to state 251


State 164

  112 struct_declaration: specifier_qualifier_list struct_declarator_list . SEMI
  118 struct_declarator_list: struct_declarator_list . COMMA struct_declarator

    SEMI   shift, and go to state 252
    COMMA  shift, and go to state 253


State 165

  117 struct_declarator_list: struct_declarator .

    $default  reduce using rule 117 (struct_declarator_list)


State 166

  119 struct_declarator: declarator .
  121                  | declarator . COLON constant_expression

    COLON  shift, and go to state 254

    $default  reduce using rule 119 (struct_declarator)


State 167

  115 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 115 (specifier_qualifier_list)


State 168

  180 labeled_statement: IDENTIFIER COLON . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 255
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 169

    4 primary_expression: L_BRAC . expression R_BRAC
   20 unary_expression: SIZEOF L_BRAC . type_name R_BRAC

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    TYPE_NAME       shift, and go to state 2
    CHAR            shift, and go to state 8
    SHORT           shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    SIGNED          shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    FLOAT           shift, and go to state 14
    DOUBLE          shift, and go to state 15
    CONST           shift, and go to state 16
    VOLATILE        shift, and go to state 17
    VOID            shift, and go to state 18
    STRUCT          shift, and go to state 19
    UNION           shift, and go to state 20
    ENUM            shift, and go to state 21
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 186
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    specifier_qualifier_list   go to state 187
    enum_specifier             go to state 30
    type_qualifier             go to state 81
    type_name                  go to state 256


State 170

   19 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 19 (unary_expression)


State 171

    4 primary_expression: L_BRAC . expression R_BRAC

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 186


State 172

   16 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 16 (unary_expression)


State 173

   17 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 17 (unary_expression)


State 174

  181 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 257


State 175

  182 labeled_statement: DEFAULT COLON . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 258
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 176

  193 selection_statement: IF L_BRAC . expression R_BRAC statement
  194                    | IF L_BRAC . expression R_BRAC statement ELSE statement

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 259


State 177

  195 selection_statement: SWITCH L_BRAC . expression R_BRAC statement

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 260


State 178

  196 iteration_statement: WHILE L_BRAC . expression R_BRAC statement

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 261


State 179

  197 iteration_statement: DO statement . WHILE L_BRAC expression R_BRAC SEMI

    WHILE  shift, and go to state 262


State 180

  198 iteration_statement: FOR L_BRAC . expression_statement expression_statement R_BRAC statement
  199                    | FOR L_BRAC . expression_statement expression_statement expression R_BRAC statement

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    expression_statement       go to state 263


State 181

  200 jump_statement: GOTO IDENTIFIER . SEMI

    SEMI  shift, and go to state 264


State 182

  201 jump_statement: CONTINUE SEMI .

    $default  reduce using rule 201 (jump_statement)


State 183

  202 jump_statement: BREAK SEMI .

    $default  reduce using rule 202 (jump_statement)


State 184

  203 jump_statement: RETURN SEMI .

    $default  reduce using rule 203 (jump_statement)


State 185

   73 expression: expression . COMMA assignment_expression
  204 jump_statement: RETURN expression . SEMI

    SEMI   shift, and go to state 265
    COMMA  shift, and go to state 228


State 186

    4 primary_expression: L_BRAC expression . R_BRAC
   73 expression: expression . COMMA assignment_expression

    R_BRAC  shift, and go to state 266
    COMMA   shift, and go to state 228


State 187

  155 type_name: specifier_qualifier_list .
  156          | specifier_qualifier_list . abstract_declarator

    L_BRAC     shift, and go to state 267
    L_SQ       shift, and go to state 234
    PTR_TIMES  shift, and go to state 23

    $default  reduce using rule 155 (type_name)

    pointer                     go to state 268
    abstract_declarator         go to state 269
    direct_abstract_declarator  go to state 238


State 188

   28 cast_expression: L_BRAC type_name . R_BRAC cast_expression

    R_BRAC  shift, and go to state 270


State 189

   10 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 271


State 190

   11 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 11 (postfix_expression)


State 191

   12 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 12 (postfix_expression)


State 192

    7 postfix_expression: postfix_expression L_BRAC . R_BRAC
    8                   | postfix_expression L_BRAC . argument_expression_list R_BRAC

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    R_BRAC          shift, and go to state 272
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    argument_expression_list   go to state 273
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 274


State 193

    6 postfix_expression: postfix_expression L_SQ . expression R_SQ

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 275


State 194

    9 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 276


State 195

   62 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 62 (assignment_operator)


State 196

   63 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 63 (assignment_operator)


State 197

   64 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 64 (assignment_operator)


State 198

   65 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 65 (assignment_operator)


State 199

   66 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 66 (assignment_operator)


State 200

   67 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 67 (assignment_operator)


State 201

   68 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


State 202

   69 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 203

   70 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 204

   71 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 205

   61 assignment_operator: EQ_SIGN .

    $default  reduce using rule 61 (assignment_operator)


State 206

   60 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 277


State 207

   18 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 18 (unary_expression)


State 208

   30 multiplicative_expression: multiplicative_expression PTR_TIMES . cast_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression  go to state 108
    postfix_expression  go to state 109
    unary_expression    go to state 147
    unary_operator      go to state 111
    cast_expression     go to state 278


State 209

   31 multiplicative_expression: multiplicative_expression DIV_OP . cast_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression  go to state 108
    postfix_expression  go to state 109
    unary_expression    go to state 147
    unary_operator      go to state 111
    cast_expression     go to state 279


State 210

   32 multiplicative_expression: multiplicative_expression MOD_OP . cast_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression  go to state 108
    postfix_expression  go to state 109
    unary_expression    go to state 147
    unary_operator      go to state 111
    cast_expression     go to state 280


State 211

   35 additive_expression: additive_expression SUB_OP . multiplicative_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 281


State 212

   34 additive_expression: additive_expression ADD_UNARY . multiplicative_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 282


State 213

   37 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 283


State 214

   38 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 284


State 215

   42 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 285


State 216

   43 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 286


State 217

   40 relational_expression: relational_expression LT_OP . shift_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 287


State 218

   41 relational_expression: relational_expression GT_OP . shift_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 288


State 219

   45 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 289


State 220

   46 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 290


State 221

   48 and_expression: and_expression AND_UNARY . equality_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 291


State 222

   50 exclusive_or_expression: exclusive_or_expression XOR_OP . and_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 292


State 223

   52 inclusive_or_expression: inclusive_or_expression OR_UNARY . exclusive_or_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 293


State 224

   54 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 294


State 225

   56 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 295


State 226

   58 conditional_expression: logical_or_expression TERNARY_OP . expression COLON conditional_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 296


State 227

  192 expression_statement: expression SEMI .

    $default  reduce using rule 192 (expression_statement)


State 228

   73 expression: expression COMMA . assignment_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 297


State 229

  185 compound_statement: L_CURL declaration_list R_CURL .

    $default  reduce using rule 185 (compound_statement)


State 230

  186 compound_statement: L_CURL declaration_list statement_list . R_CURL
  190 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    R_CURL          shift, and go to state 298
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 232
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 231

  184 compound_statement: L_CURL statement_list R_CURL .

    $default  reduce using rule 184 (compound_statement)


State 232

  190 statement_list: statement_list statement .

    $default  reduce using rule 190 (statement_list)


State 233

  134 direct_declarator: L_BRAC . declarator R_BRAC
  160 direct_abstract_declarator: L_BRAC . abstract_declarator R_BRAC
  165                           | L_BRAC . R_BRAC
  166                           | L_BRAC . parameter_type_list R_BRAC

    IDENTIFIER  shift, and go to state 1
    TYPE_NAME   shift, and go to state 2
    TYPEDEF     shift, and go to state 3
    EXTERN      shift, and go to state 4
    STATIC      shift, and go to state 5
    AUTO        shift, and go to state 6
    REGISTER    shift, and go to state 7
    CHAR        shift, and go to state 8
    SHORT       shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    CONST       shift, and go to state 16
    VOLATILE    shift, and go to state 17
    VOID        shift, and go to state 18
    STRUCT      shift, and go to state 19
    UNION       shift, and go to state 20
    ENUM        shift, and go to state 21
    L_BRAC      shift, and go to state 233
    R_BRAC      shift, and go to state 299
    L_SQ        shift, and go to state 234
    PTR_TIMES   shift, and go to state 23

    declaration_specifiers      go to state 140
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    declarator                  go to state 41
    direct_declarator           go to state 33
    pointer                     go to state 236
    parameter_type_list         go to state 300
    parameter_list              go to state 142
    parameter_declaration       go to state 143
    abstract_declarator         go to state 301
    direct_abstract_declarator  go to state 238


State 234

  161 direct_abstract_declarator: L_SQ . L_SQ
  162                           | L_SQ . constant_expression R_SQ

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    L_SQ            shift, and go to state 302
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 148
    constant_expression        go to state 303


State 235

  150 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 150 (parameter_declaration)


State 236

  131 declarator: pointer . direct_declarator
  157 abstract_declarator: pointer .
  159                    | pointer . direct_abstract_declarator

    IDENTIFIER  shift, and go to state 1
    L_BRAC      shift, and go to state 233
    L_SQ        shift, and go to state 234

    $default  reduce using rule 157 (abstract_declarator)

    direct_declarator           go to state 61
    direct_abstract_declarator  go to state 304


State 237

  151 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 151 (parameter_declaration)


State 238

  158 abstract_declarator: direct_abstract_declarator .
  163 direct_abstract_declarator: direct_abstract_declarator . L_SQ L_SQ
  164                           | direct_abstract_declarator . L_SQ constant_expression R_SQ
  167                           | direct_abstract_declarator . L_BRAC R_BRAC
  168                           | direct_abstract_declarator . L_BRAC parameter_type_list R_BRAC

    L_BRAC  shift, and go to state 305
    L_SQ    shift, and go to state 306

    $default  reduce using rule 158 (abstract_declarator)


State 239

  137 direct_declarator: direct_declarator L_BRAC parameter_type_list R_BRAC .

    $default  reduce using rule 137 (direct_declarator)


State 240

  147 parameter_type_list: parameter_list COMMA . ELLIPSIS
  149 parameter_list: parameter_list COMMA . parameter_declaration

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21
    ELLIPSIS   shift, and go to state 307

    declaration_specifiers     go to state 140
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    parameter_declaration      go to state 308


State 241

  138 direct_declarator: direct_declarator L_BRAC identifier_list R_BRAC .

    $default  reduce using rule 138 (direct_declarator)


State 242

  154 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 309


State 243

  135 direct_declarator: direct_declarator L_SQ constant_expression R_SQ .

    $default  reduce using rule 135 (direct_declarator)


State 244

  123 enum_specifier: ENUM IDENTIFIER L_CURL enumerator_list R_CURL .

    $default  reduce using rule 123 (enum_specifier)


State 245

  128 enumerator: IDENTIFIER EQ_SIGN constant_expression .

    $default  reduce using rule 128 (enumerator)


State 246

  126 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 126 (enumerator_list)


State 247

   85 init_declarator_list: init_declarator_list COMMA init_declarator $@1 .

    $default  reduce using rule 85 (init_declarator_list)


State 248

  172 initializer_list: initializer .

    $default  reduce using rule 172 (initializer_list)


State 249

  170 initializer: L_CURL initializer_list . R_CURL
  171            | L_CURL initializer_list . COMMA R_CURL
  173 initializer_list: initializer_list . COMMA initializer

    R_CURL  shift, and go to state 310
    COMMA   shift, and go to state 311


State 250

  105 struct_or_union_specifier: struct_or_union IDENTIFIER L_CURL struct_declaration_list R_CURL .

    $default  reduce using rule 105 (struct_or_union_specifier)


State 251

  120 struct_declarator: COLON constant_expression .

    $default  reduce using rule 120 (struct_declarator)


State 252

  112 struct_declaration: specifier_qualifier_list struct_declarator_list SEMI .

    $default  reduce using rule 112 (struct_declaration)


State 253

  118 struct_declarator_list: struct_declarator_list COMMA . struct_declarator

    IDENTIFIER  shift, and go to state 1
    L_BRAC      shift, and go to state 22
    COLON       shift, and go to state 163
    PTR_TIMES   shift, and go to state 23

    struct_declarator  go to state 312
    declarator         go to state 166
    direct_declarator  go to state 33
    pointer            go to state 34


State 254

  121 struct_declarator: declarator COLON . constant_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 148
    constant_expression        go to state 313


State 255

  180 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 180 (labeled_statement)


State 256

   20 unary_expression: SIZEOF L_BRAC type_name . R_BRAC

    R_BRAC  shift, and go to state 314


State 257

  181 labeled_statement: CASE constant_expression COLON . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 315
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 258

  182 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 182 (labeled_statement)


State 259

   73 expression: expression . COMMA assignment_expression
  193 selection_statement: IF L_BRAC expression . R_BRAC statement
  194                    | IF L_BRAC expression . R_BRAC statement ELSE statement

    R_BRAC  shift, and go to state 316
    COMMA   shift, and go to state 228


State 260

   73 expression: expression . COMMA assignment_expression
  195 selection_statement: SWITCH L_BRAC expression . R_BRAC statement

    R_BRAC  shift, and go to state 317
    COMMA   shift, and go to state 228


State 261

   73 expression: expression . COMMA assignment_expression
  196 iteration_statement: WHILE L_BRAC expression . R_BRAC statement

    R_BRAC  shift, and go to state 318
    COMMA   shift, and go to state 228


State 262

  197 iteration_statement: DO statement WHILE . L_BRAC expression R_BRAC SEMI

    L_BRAC  shift, and go to state 319


State 263

  198 iteration_statement: FOR L_BRAC expression_statement . expression_statement R_BRAC statement
  199                    | FOR L_BRAC expression_statement . expression_statement expression R_BRAC statement

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    expression_statement       go to state 320


State 264

  200 jump_statement: GOTO IDENTIFIER SEMI .

    $default  reduce using rule 200 (jump_statement)


State 265

  204 jump_statement: RETURN expression SEMI .

    $default  reduce using rule 204 (jump_statement)


State 266

    4 primary_expression: L_BRAC expression R_BRAC .

    $default  reduce using rule 4 (primary_expression)


State 267

  160 direct_abstract_declarator: L_BRAC . abstract_declarator R_BRAC
  165                           | L_BRAC . R_BRAC
  166                           | L_BRAC . parameter_type_list R_BRAC

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21
    L_BRAC     shift, and go to state 267
    R_BRAC     shift, and go to state 299
    L_SQ       shift, and go to state 234
    PTR_TIMES  shift, and go to state 23

    declaration_specifiers      go to state 140
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    pointer                     go to state 268
    parameter_type_list         go to state 300
    parameter_list              go to state 142
    parameter_declaration       go to state 143
    abstract_declarator         go to state 301
    direct_abstract_declarator  go to state 238


State 268

  157 abstract_declarator: pointer .
  159                    | pointer . direct_abstract_declarator

    L_BRAC  shift, and go to state 267
    L_SQ    shift, and go to state 234

    $default  reduce using rule 157 (abstract_declarator)

    direct_abstract_declarator  go to state 304


State 269

  156 type_name: specifier_qualifier_list abstract_declarator .

    $default  reduce using rule 156 (type_name)


State 270

   28 cast_expression: L_BRAC type_name R_BRAC . cast_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression  go to state 108
    postfix_expression  go to state 109
    unary_expression    go to state 147
    unary_operator      go to state 111
    cast_expression     go to state 321


State 271

   10 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 10 (postfix_expression)


State 272

    7 postfix_expression: postfix_expression L_BRAC R_BRAC .

    $default  reduce using rule 7 (postfix_expression)


State 273

    8 postfix_expression: postfix_expression L_BRAC argument_expression_list . R_BRAC
   14 argument_expression_list: argument_expression_list . COMMA assignment_expression

    R_BRAC  shift, and go to state 322
    COMMA   shift, and go to state 323


State 274

   13 argument_expression_list: assignment_expression .

    $default  reduce using rule 13 (argument_expression_list)


State 275

    6 postfix_expression: postfix_expression L_SQ expression . R_SQ
   73 expression: expression . COMMA assignment_expression

    R_SQ   shift, and go to state 324
    COMMA  shift, and go to state 228


State 276

    9 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 9 (postfix_expression)


State 277

   60 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 60 (assignment_expression)


State 278

   30 multiplicative_expression: multiplicative_expression PTR_TIMES cast_expression .

    $default  reduce using rule 30 (multiplicative_expression)


State 279

   31 multiplicative_expression: multiplicative_expression DIV_OP cast_expression .

    $default  reduce using rule 31 (multiplicative_expression)


State 280

   32 multiplicative_expression: multiplicative_expression MOD_OP cast_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 281

   30 multiplicative_expression: multiplicative_expression . PTR_TIMES cast_expression
   31                          | multiplicative_expression . DIV_OP cast_expression
   32                          | multiplicative_expression . MOD_OP cast_expression
   35 additive_expression: additive_expression SUB_OP multiplicative_expression .

    PTR_TIMES  shift, and go to state 208
    DIV_OP     shift, and go to state 209
    MOD_OP     shift, and go to state 210

    $default  reduce using rule 35 (additive_expression)


State 282

   30 multiplicative_expression: multiplicative_expression . PTR_TIMES cast_expression
   31                          | multiplicative_expression . DIV_OP cast_expression
   32                          | multiplicative_expression . MOD_OP cast_expression
   34 additive_expression: additive_expression ADD_UNARY multiplicative_expression .

    PTR_TIMES  shift, and go to state 208
    DIV_OP     shift, and go to state 209
    MOD_OP     shift, and go to state 210

    $default  reduce using rule 34 (additive_expression)


State 283

   34 additive_expression: additive_expression . ADD_UNARY multiplicative_expression
   35                    | additive_expression . SUB_OP multiplicative_expression
   37 shift_expression: shift_expression LEFT_OP additive_expression .

    SUB_OP     shift, and go to state 211
    ADD_UNARY  shift, and go to state 212

    $default  reduce using rule 37 (shift_expression)


State 284

   34 additive_expression: additive_expression . ADD_UNARY multiplicative_expression
   35                    | additive_expression . SUB_OP multiplicative_expression
   38 shift_expression: shift_expression RIGHT_OP additive_expression .

    SUB_OP     shift, and go to state 211
    ADD_UNARY  shift, and go to state 212

    $default  reduce using rule 38 (shift_expression)


State 285

   37 shift_expression: shift_expression . LEFT_OP additive_expression
   38                 | shift_expression . RIGHT_OP additive_expression
   42 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_OP   shift, and go to state 213
    RIGHT_OP  shift, and go to state 214

    $default  reduce using rule 42 (relational_expression)


State 286

   37 shift_expression: shift_expression . LEFT_OP additive_expression
   38                 | shift_expression . RIGHT_OP additive_expression
   43 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_OP   shift, and go to state 213
    RIGHT_OP  shift, and go to state 214

    $default  reduce using rule 43 (relational_expression)


State 287

   37 shift_expression: shift_expression . LEFT_OP additive_expression
   38                 | shift_expression . RIGHT_OP additive_expression
   40 relational_expression: relational_expression LT_OP shift_expression .

    LEFT_OP   shift, and go to state 213
    RIGHT_OP  shift, and go to state 214

    $default  reduce using rule 40 (relational_expression)


State 288

   37 shift_expression: shift_expression . LEFT_OP additive_expression
   38                 | shift_expression . RIGHT_OP additive_expression
   41 relational_expression: relational_expression GT_OP shift_expression .

    LEFT_OP   shift, and go to state 213
    RIGHT_OP  shift, and go to state 214

    $default  reduce using rule 41 (relational_expression)


State 289

   40 relational_expression: relational_expression . LT_OP shift_expression
   41                      | relational_expression . GT_OP shift_expression
   42                      | relational_expression . LE_OP shift_expression
   43                      | relational_expression . GE_OP shift_expression
   45 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 215
    GE_OP  shift, and go to state 216
    LT_OP  shift, and go to state 217
    GT_OP  shift, and go to state 218

    $default  reduce using rule 45 (equality_expression)


State 290

   40 relational_expression: relational_expression . LT_OP shift_expression
   41                      | relational_expression . GT_OP shift_expression
   42                      | relational_expression . LE_OP shift_expression
   43                      | relational_expression . GE_OP shift_expression
   46 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 215
    GE_OP  shift, and go to state 216
    LT_OP  shift, and go to state 217
    GT_OP  shift, and go to state 218

    $default  reduce using rule 46 (equality_expression)


State 291

   45 equality_expression: equality_expression . EQ_OP relational_expression
   46                    | equality_expression . NE_OP relational_expression
   48 and_expression: and_expression AND_UNARY equality_expression .

    EQ_OP  shift, and go to state 219
    NE_OP  shift, and go to state 220

    $default  reduce using rule 48 (and_expression)


State 292

   48 and_expression: and_expression . AND_UNARY equality_expression
   50 exclusive_or_expression: exclusive_or_expression XOR_OP and_expression .

    AND_UNARY  shift, and go to state 221

    $default  reduce using rule 50 (exclusive_or_expression)


State 293

   50 exclusive_or_expression: exclusive_or_expression . XOR_OP and_expression
   52 inclusive_or_expression: inclusive_or_expression OR_UNARY exclusive_or_expression .

    XOR_OP  shift, and go to state 222

    $default  reduce using rule 52 (inclusive_or_expression)


State 294

   52 inclusive_or_expression: inclusive_or_expression . OR_UNARY exclusive_or_expression
   54 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .

    OR_UNARY  shift, and go to state 223

    $default  reduce using rule 54 (logical_and_expression)


State 295

   54 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   56 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 224

    $default  reduce using rule 56 (logical_or_expression)


State 296

   58 conditional_expression: logical_or_expression TERNARY_OP expression . COLON conditional_expression
   73 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 228
    COLON  shift, and go to state 325


State 297

   73 expression: expression COMMA assignment_expression .

    $default  reduce using rule 73 (expression)


State 298

  186 compound_statement: L_CURL declaration_list statement_list R_CURL .

    $default  reduce using rule 186 (compound_statement)


State 299

  165 direct_abstract_declarator: L_BRAC R_BRAC .

    $default  reduce using rule 165 (direct_abstract_declarator)


State 300

  166 direct_abstract_declarator: L_BRAC parameter_type_list . R_BRAC

    R_BRAC  shift, and go to state 326


State 301

  160 direct_abstract_declarator: L_BRAC abstract_declarator . R_BRAC

    R_BRAC  shift, and go to state 327


State 302

  161 direct_abstract_declarator: L_SQ L_SQ .

    $default  reduce using rule 161 (direct_abstract_declarator)


State 303

  162 direct_abstract_declarator: L_SQ constant_expression . R_SQ

    R_SQ  shift, and go to state 328


State 304

  159 abstract_declarator: pointer direct_abstract_declarator .
  163 direct_abstract_declarator: direct_abstract_declarator . L_SQ L_SQ
  164                           | direct_abstract_declarator . L_SQ constant_expression R_SQ
  167                           | direct_abstract_declarator . L_BRAC R_BRAC
  168                           | direct_abstract_declarator . L_BRAC parameter_type_list R_BRAC

    L_BRAC  shift, and go to state 305
    L_SQ    shift, and go to state 306

    $default  reduce using rule 159 (abstract_declarator)


State 305

  167 direct_abstract_declarator: direct_abstract_declarator L_BRAC . R_BRAC
  168                           | direct_abstract_declarator L_BRAC . parameter_type_list R_BRAC

    TYPE_NAME  shift, and go to state 2
    TYPEDEF    shift, and go to state 3
    EXTERN     shift, and go to state 4
    STATIC     shift, and go to state 5
    AUTO       shift, and go to state 6
    REGISTER   shift, and go to state 7
    CHAR       shift, and go to state 8
    SHORT      shift, and go to state 9
    INT        shift, and go to state 10
    LONG       shift, and go to state 11
    SIGNED     shift, and go to state 12
    UNSIGNED   shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    CONST      shift, and go to state 16
    VOLATILE   shift, and go to state 17
    VOID       shift, and go to state 18
    STRUCT     shift, and go to state 19
    UNION      shift, and go to state 20
    ENUM       shift, and go to state 21
    R_BRAC     shift, and go to state 329

    declaration_specifiers     go to state 140
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    parameter_type_list        go to state 330
    parameter_list             go to state 142
    parameter_declaration      go to state 143


State 306

  163 direct_abstract_declarator: direct_abstract_declarator L_SQ . L_SQ
  164                           | direct_abstract_declarator L_SQ . constant_expression R_SQ

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    L_SQ            shift, and go to state 331
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 148
    constant_expression        go to state 332


State 307

  147 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 147 (parameter_type_list)


State 308

  149 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 149 (parameter_list)


State 309

  154 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 154 (identifier_list)


State 310

  170 initializer: L_CURL initializer_list R_CURL .

    $default  reduce using rule 170 (initializer)


State 311

  171 initializer: L_CURL initializer_list COMMA . R_CURL
  173 initializer_list: initializer_list COMMA . initializer

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 155
    R_CURL          shift, and go to state 333
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 156
    initializer                go to state 334


State 312

  118 struct_declarator_list: struct_declarator_list COMMA struct_declarator .

    $default  reduce using rule 118 (struct_declarator_list)


State 313

  121 struct_declarator: declarator COLON constant_expression .

    $default  reduce using rule 121 (struct_declarator)


State 314

   20 unary_expression: SIZEOF L_BRAC type_name R_BRAC .

    $default  reduce using rule 20 (unary_expression)


State 315

  181 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 181 (labeled_statement)


State 316

  193 selection_statement: IF L_BRAC expression R_BRAC . statement
  194                    | IF L_BRAC expression R_BRAC . statement ELSE statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 335
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 317

  195 selection_statement: SWITCH L_BRAC expression R_BRAC . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 336
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 318

  196 iteration_statement: WHILE L_BRAC expression R_BRAC . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 337
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 319

  197 iteration_statement: DO statement WHILE L_BRAC . expression R_BRAC SEMI

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 338


State 320

  198 iteration_statement: FOR L_BRAC expression_statement expression_statement . R_BRAC statement
  199                    | FOR L_BRAC expression_statement expression_statement . expression R_BRAC statement

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    R_BRAC          shift, and go to state 339
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 340


State 321

   28 cast_expression: L_BRAC type_name R_BRAC cast_expression .

    $default  reduce using rule 28 (cast_expression)


State 322

    8 postfix_expression: postfix_expression L_BRAC argument_expression_list R_BRAC .

    $default  reduce using rule 8 (postfix_expression)


State 323

   14 argument_expression_list: argument_expression_list COMMA . assignment_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 341


State 324

    6 postfix_expression: postfix_expression L_SQ expression R_SQ .

    $default  reduce using rule 6 (postfix_expression)


State 325

   58 conditional_expression: logical_or_expression TERNARY_OP expression COLON . conditional_expression

    IDENTIFIER      shift, and go to state 145
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    L_BRAC          shift, and go to state 99
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 147
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 342


State 326

  166 direct_abstract_declarator: L_BRAC parameter_type_list R_BRAC .

    $default  reduce using rule 166 (direct_abstract_declarator)


State 327

  160 direct_abstract_declarator: L_BRAC abstract_declarator R_BRAC .

    $default  reduce using rule 160 (direct_abstract_declarator)


State 328

  162 direct_abstract_declarator: L_SQ constant_expression R_SQ .

    $default  reduce using rule 162 (direct_abstract_declarator)


State 329

  167 direct_abstract_declarator: direct_abstract_declarator L_BRAC R_BRAC .

    $default  reduce using rule 167 (direct_abstract_declarator)


State 330

  168 direct_abstract_declarator: direct_abstract_declarator L_BRAC parameter_type_list . R_BRAC

    R_BRAC  shift, and go to state 343


State 331

  163 direct_abstract_declarator: direct_abstract_declarator L_SQ L_SQ .

    $default  reduce using rule 163 (direct_abstract_declarator)


State 332

  164 direct_abstract_declarator: direct_abstract_declarator L_SQ constant_expression . R_SQ

    R_SQ  shift, and go to state 344


State 333

  171 initializer: L_CURL initializer_list COMMA R_CURL .

    $default  reduce using rule 171 (initializer)


State 334

  173 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 173 (initializer_list)


State 335

  193 selection_statement: IF L_BRAC expression R_BRAC statement .
  194                    | IF L_BRAC expression R_BRAC statement . ELSE statement

    ELSE  shift, and go to state 345

    $default  reduce using rule 193 (selection_statement)


State 336

  195 selection_statement: SWITCH L_BRAC expression R_BRAC statement .

    $default  reduce using rule 195 (selection_statement)


State 337

  196 iteration_statement: WHILE L_BRAC expression R_BRAC statement .

    $default  reduce using rule 196 (iteration_statement)


State 338

   73 expression: expression . COMMA assignment_expression
  197 iteration_statement: DO statement WHILE L_BRAC expression . R_BRAC SEMI

    R_BRAC  shift, and go to state 346
    COMMA   shift, and go to state 228


State 339

  198 iteration_statement: FOR L_BRAC expression_statement expression_statement R_BRAC . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 347
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 340

   73 expression: expression . COMMA assignment_expression
  199 iteration_statement: FOR L_BRAC expression_statement expression_statement expression . R_BRAC statement

    R_BRAC  shift, and go to state 348
    COMMA   shift, and go to state 228


State 341

   14 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 14 (argument_expression_list)


State 342

   58 conditional_expression: logical_or_expression TERNARY_OP expression COLON conditional_expression .

    $default  reduce using rule 58 (conditional_expression)


State 343

  168 direct_abstract_declarator: direct_abstract_declarator L_BRAC parameter_type_list R_BRAC .

    $default  reduce using rule 168 (direct_abstract_declarator)


State 344

  164 direct_abstract_declarator: direct_abstract_declarator L_SQ constant_expression R_SQ .

    $default  reduce using rule 164 (direct_abstract_declarator)


State 345

  194 selection_statement: IF L_BRAC expression R_BRAC statement ELSE . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 349
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 346

  197 iteration_statement: DO statement WHILE L_BRAC expression R_BRAC . SEMI

    SEMI  shift, and go to state 350


State 347

  198 iteration_statement: FOR L_BRAC expression_statement expression_statement R_BRAC statement .

    $default  reduce using rule 198 (iteration_statement)


State 348

  199 iteration_statement: FOR L_BRAC expression_statement expression_statement expression R_BRAC . statement

    IDENTIFIER      shift, and go to state 82
    CONSTANT        shift, and go to state 83
    STRING_LITERAL  shift, and go to state 84
    SIZEOF          shift, and go to state 85
    INC_OP          shift, and go to state 86
    DEC_OP          shift, and go to state 87
    CASE            shift, and go to state 88
    DEFAULT         shift, and go to state 89
    IF              shift, and go to state 90
    SWITCH          shift, and go to state 91
    WHILE           shift, and go to state 92
    DO              shift, and go to state 93
    FOR             shift, and go to state 94
    GOTO            shift, and go to state 95
    CONTINUE        shift, and go to state 96
    BREAK           shift, and go to state 97
    RETURN          shift, and go to state 98
    L_BRAC          shift, and go to state 99
    L_CURL          shift, and go to state 54
    SEMI            shift, and go to state 101
    AND_UNARY       shift, and go to state 102
    EXCLA           shift, and go to state 103
    TILDE           shift, and go to state 104
    SUB_OP          shift, and go to state 105
    ADD_UNARY       shift, and go to state 106
    PTR_TIMES       shift, and go to state 107

    primary_expression         go to state 108
    postfix_expression         go to state 109
    unary_expression           go to state 110
    unary_operator             go to state 111
    cast_expression            go to state 112
    multiplicative_expression  go to state 113
    additive_expression        go to state 114
    shift_expression           go to state 115
    relational_expression      go to state 116
    equality_expression        go to state 117
    and_expression             go to state 118
    exclusive_or_expression    go to state 119
    inclusive_or_expression    go to state 120
    logical_and_expression     go to state 121
    logical_or_expression      go to state 122
    conditional_expression     go to state 123
    assignment_expression      go to state 124
    expression                 go to state 125
    statement                  go to state 351
    labeled_statement          go to state 127
    compound_statement         go to state 128
    expression_statement       go to state 131
    selection_statement        go to state 132
    iteration_statement        go to state 133
    jump_statement             go to state 134


State 349

  194 selection_statement: IF L_BRAC expression R_BRAC statement ELSE statement .

    $default  reduce using rule 194 (selection_statement)


State 350

  197 iteration_statement: DO statement WHILE L_BRAC expression R_BRAC SEMI .

    $default  reduce using rule 197 (iteration_statement)


State 351

  199 iteration_statement: FOR L_BRAC expression_statement expression_statement expression R_BRAC statement .

    $default  reduce using rule 199 (iteration_statement)
